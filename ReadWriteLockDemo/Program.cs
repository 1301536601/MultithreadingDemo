using System;

namespace ReadWriteLockDemo
{
    /// <summary>
    /// 读写锁Demo
    /// 读写锁是一个具有特殊用途的线程锁，适用于频繁读取且读取需要一定时间的场景，共享资源的读取操作通常是可以同时执行的，
    /// 而普通的互斥锁不管是获取还是修改操作无法同时执行，如果多个线程为了读取操作而获取互斥锁，那么同一时间只有一个线程可以执行读取操作，
    /// 在频繁读取的场景下回对吞吐量造成影响
    /// 读取锁把锁分为读取锁和写入锁，线程可以根据对共享资源的操作类型获取读取锁还是写入锁，读取锁可以被多个线程同时获取，写入锁不可以被多个线程
    /// 同事获取，且读取锁和写入锁不可以被不同的线同时获取，
    /// 操作               读取锁状态             写入锁状态                  获取锁是否获取等待
    /// 获取读取锁          未获取                  未获取                      无需等待
    ///                    已被其他线程获取         未获取                      无需等待
    ///                    未获取                  已被其他线程获取             需要等待其他线程释放
    /// 获取写入锁          未获取                  未获取                      无需等待
    ///                    已被其他线程获取         未获取                      需要等待其他线程释放
    ///                    未获取                  已被其他线程获取             需要等待其他线程释放 
    /// /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            var c = ReadWriteLockDemo.GetValue("value", x =>
              {
                  Console.WriteLine(x);
                  return x;
              });

            Console.WriteLine("结束了");
            Console.WriteLine($@"获取到的结果为:{c}");
        }
    }
}
